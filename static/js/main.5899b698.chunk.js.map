{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handlePrevButton","props","images","step","frameSize","lastPosition","length","prevPosition","setState","handleNextButton","nextPosition","this","itemWidth","animationDuration","infinite","isPrevDisabled","isNextDisabled","className","style","width","transition","map","image","src","alt","slice","transform","minWidth","type","disabled","onClick","React","Component","App","setStep","e","target","value","setItemWidth","setFrameSize","setAnimationDuration","setInfinite","checked","height","action","htmlFor","name","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5899b698.chunk.js","sourcesContent":["import React from \"react\";\nimport \"bulma\";\nimport \"./Carousel.scss\";\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\ninterface State {\n  position: number;\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state: State = {\n    position: 0,\n  };\n\n  handlePrevButton = () => {\n    const { images, step, frameSize } = this.props;\n    const { position } = this.state;\n    const lastPosition = images.length - frameSize;\n    let prevPosition = position - step;\n\n    if (position === 0) {\n      prevPosition = lastPosition;\n    }\n\n    if (prevPosition <= 0) {\n      prevPosition = 0;\n    }\n\n    this.setState({ position: prevPosition });\n  };\n\n  handleNextButton = () => {\n    const { images, step, frameSize } = this.props;\n    const { position } = this.state;\n    const lastPosition = images.length - frameSize;\n    let nextPosition = position + step;\n\n    if (position === lastPosition) {\n      nextPosition = 0;\n    }\n\n    if (nextPosition > lastPosition) {\n      nextPosition = lastPosition;\n    }\n\n    this.setState({ position: nextPosition });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      // eslint-disable-next-line\n    } = this.props;\n    const { position } = this.state;\n    const isPrevDisabled = position <= 0 && !infinite;\n    const isNextDisabled = position >= images.length - frameSize && !infinite;\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${frameSize * itemWidth + 20}px`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          <ul className=\"Carousel__list\">\n            {images.map((image) => (\n              <li className=\"Carousel__item\" key={`${image.slice(-5, -4)}`}>\n                <img\n                  src={`${image}`}\n                  alt={`${image.slice(-5, -4)}`}\n                  width={itemWidth}\n                  style={{\n                    transform: `translateX(${-position * itemWidth}px)`,\n                    transition: `${animationDuration}ms`,\n                    minWidth: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light is-rounded\"\n            disabled={isPrevDisabled}\n            onClick={this.handlePrevButton}\n          >\n            &larr;\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button is-warning is-light is-rounded\"\n            disabled={isNextDisabled}\n            onClick={this.handleNextButton}\n            data-cy=\"next\"\n          >\n            &rarr;\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport \"bulma\";\nimport \"./App.scss\";\nimport Carousel from \"./components/Carousel\";\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      \"./img/1.png\",\n      \"./img/2.png\",\n      \"./img/3.png\",\n      \"./img/4.png\",\n      \"./img/5.png\",\n      \"./img/6.png\",\n      \"./img/7.png\",\n      \"./img/8.png\",\n      \"./img/9.png\",\n      \"./img/10.png\",\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setStep = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +e.target.value });\n  };\n\n  setItemWidth = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +e.target.value });\n  };\n\n  setFrameSize = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +e.target.value });\n  };\n\n  setAnimationDuration = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +e.target.value });\n  };\n\n  setInfinite = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: e.target.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      // eslint-disable-next-line\n    } = this.state;\n\n    return (\n      <div\n        className=\"App box\"\n        style={{\n          width: `${frameSize * itemWidth + 100}px`,\n          height: `${itemWidth + 500}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <h1 className=\"title\" data-cy=\"title\">\n          Carousel with {images.length} images\n        </h1>\n\n        <form action=\"\">\n          <label htmlFor=\"itemWidth\" className=\"App__form__label\">\n            Item Width\n            <input\n              type=\"number\"\n              className=\"input is-rounded App__form__input\"\n              name=\"itemWidth\"\n              id=\"itemWidth\"\n              min=\"100\"\n              max=\"250\"\n              step=\"5\"\n              value={itemWidth}\n              onChange={this.setItemWidth}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\" className=\"App__form__label\">\n            Frame Size\n            <input\n              type=\"number\"\n              className=\"input is-rounded App__form__input\"\n              name=\"frameSize\"\n              id=\"frameSize\"\n              min={1}\n              max={images.length / 2}\n              step={1}\n              value={frameSize}\n              onChange={this.setFrameSize}\n            />\n          </label>\n\n          <label htmlFor=\"step\" className=\"App__form__label\">\n            Step\n            <input\n              type=\"number\"\n              className=\"input is-rounded App__form__input\"\n              name=\"step\"\n              id=\"step\"\n              min={1}\n              max={images.length}\n              value={step}\n              onChange={this.setStep}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\" className=\"App__form__label\">\n            Animation Duration\n            <input\n              type=\"number\"\n              className=\"input is-rounded App__form__input\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              min={250}\n              max={5000}\n              step={250}\n              value={animationDuration}\n              onChange={this.setAnimationDuration}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\" className=\"App__form__label\">\n            Infinite\n            <input\n              type=\"checkbox\"\n              className=\"App__form__input checkbox\"\n              name=\"infinite\"\n              id=\"infinite\"\n              checked={infinite}\n              onChange={this.setInfinite}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}